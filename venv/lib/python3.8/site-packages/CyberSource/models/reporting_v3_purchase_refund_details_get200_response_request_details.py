# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'request_id': 'str',
        'cybersource_merchant_id': 'str',
        'processor_merchant_id': 'str',
        'group_name': 'str',
        'transaction_reference_number': 'str',
        'merchant_reference_number': 'str'
    }

    attribute_map = {
        'request_id': 'requestId',
        'cybersource_merchant_id': 'cybersourceMerchantId',
        'processor_merchant_id': 'processorMerchantId',
        'group_name': 'groupName',
        'transaction_reference_number': 'transactionReferenceNumber',
        'merchant_reference_number': 'merchantReferenceNumber'
    }

    def __init__(self, request_id=None, cybersource_merchant_id=None, processor_merchant_id=None, group_name=None, transaction_reference_number=None, merchant_reference_number=None):
        """
        ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails - a model defined in Swagger
        """

        self._request_id = None
        self._cybersource_merchant_id = None
        self._processor_merchant_id = None
        self._group_name = None
        self._transaction_reference_number = None
        self._merchant_reference_number = None

        if request_id is not None:
          self.request_id = request_id
        if cybersource_merchant_id is not None:
          self.cybersource_merchant_id = cybersource_merchant_id
        if processor_merchant_id is not None:
          self.processor_merchant_id = processor_merchant_id
        if group_name is not None:
          self.group_name = group_name
        if transaction_reference_number is not None:
          self.transaction_reference_number = transaction_reference_number
        if merchant_reference_number is not None:
          self.merchant_reference_number = merchant_reference_number

    @property
    def request_id(self):
        """
        Gets the request_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        An unique identification number assigned by CyberSource to identify the submitted request.

        :return: The request_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """
        Sets the request_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        An unique identification number assigned by CyberSource to identify the submitted request.

        :param request_id: The request_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :type: str
        """

        self._request_id = request_id

    @property
    def cybersource_merchant_id(self):
        """
        Gets the cybersource_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Cybersource Merchant Id

        :return: The cybersource_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :rtype: str
        """
        return self._cybersource_merchant_id

    @cybersource_merchant_id.setter
    def cybersource_merchant_id(self, cybersource_merchant_id):
        """
        Sets the cybersource_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Cybersource Merchant Id

        :param cybersource_merchant_id: The cybersource_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :type: str
        """

        self._cybersource_merchant_id = cybersource_merchant_id

    @property
    def processor_merchant_id(self):
        """
        Gets the processor_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Cybersource Processor Merchant Id

        :return: The processor_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :rtype: str
        """
        return self._processor_merchant_id

    @processor_merchant_id.setter
    def processor_merchant_id(self, processor_merchant_id):
        """
        Sets the processor_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Cybersource Processor Merchant Id

        :param processor_merchant_id: The processor_merchant_id of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :type: str
        """

        self._processor_merchant_id = processor_merchant_id

    @property
    def group_name(self):
        """
        Gets the group_name of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Group Name

        :return: The group_name of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """
        Sets the group_name of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Group Name

        :param group_name: The group_name of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :type: str
        """

        self._group_name = group_name

    @property
    def transaction_reference_number(self):
        """
        Gets the transaction_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Transaction Reference Number

        :return: The transaction_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :rtype: str
        """
        return self._transaction_reference_number

    @transaction_reference_number.setter
    def transaction_reference_number(self, transaction_reference_number):
        """
        Sets the transaction_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Transaction Reference Number

        :param transaction_reference_number: The transaction_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :type: str
        """

        self._transaction_reference_number = transaction_reference_number

    @property
    def merchant_reference_number(self):
        """
        Gets the merchant_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Merchant Reference Number

        :return: The merchant_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :rtype: str
        """
        return self._merchant_reference_number

    @merchant_reference_number.setter
    def merchant_reference_number(self, merchant_reference_number):
        """
        Sets the merchant_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        Merchant Reference Number

        :param merchant_reference_number: The merchant_reference_number of this ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails.
        :type: str
        """

        self._merchant_reference_number = merchant_reference_number

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ReportingV3PurchaseRefundDetailsGet200ResponseRequestDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
